{"version":3,"file":"default-73141230.js","sources":["../../../../node_modules/nuxt/dist/app/components/client-only.mjs","../../../../layouts/components/HeaderCpn.vue","../../../../assets/images/wb-2wm.png","../../../../assets/images/wx-2wm.png"],"sourcesContent":["import { ref, onMounted, defineComponent, createElementBlock, h, createElementVNode } from 'vue'\n\nexport default defineComponent({\n  name: 'ClientOnly',\n  inheritAttrs: false,\n  // eslint-disable-next-line vue/require-prop-types\n  props: ['fallback', 'placeholder', 'placeholderTag', 'fallbackTag'],\n  setup (_, { slots, attrs }) {\n    const mounted = ref(false)\n    onMounted(() => { mounted.value = true })\n    return (props) => {\n      if (mounted.value) { return slots.default?.() }\n      const slot = slots.fallback || slots.placeholder\n      if (slot) { return slot() }\n      const fallbackStr = props.fallback || props.placeholder || ''\n      const fallbackTag = props.fallbackTag || props.placeholderTag || 'span'\n      return createElementBlock(fallbackTag, attrs, fallbackStr)\n    }\n  }\n})\n\nconst cache = new WeakMap()\n\nexport function createClientOnly (component) {\n  if (cache.has(component)) {\n    return cache.get(component)\n  }\n\n  const clone = { ...component }\n\n  if (clone.render) {\n    // override the component render (non script setup component)\n    clone.render = (ctx, ...args) => {\n      if (ctx.mounted$) {\n        const res = component.render(ctx, ...args)\n        return (res.children === null || typeof res.children === 'string')\n          ? createElementVNode(res.type, res.props, res.children, res.patchFlag, res.dynamicProps, res.shapeFlag)\n          : h(res)\n      } else {\n        return h('div', ctx.$attrs ?? ctx._.attrs)\n      }\n    }\n  } else if (clone.template) {\n    // handle runtime-compiler template\n    clone.template = `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else><div></div></template>\n    `\n  }\n\n  clone.setup = (props, ctx) => {\n    const mounted$ = ref(false)\n    onMounted(() => { mounted$.value = true })\n\n    return Promise.resolve(component.setup?.(props, ctx) || {})\n      .then((setupState) => {\n        return typeof setupState !== 'function'\n          ? { ...setupState, mounted$ }\n          : (...args) => {\n              if (mounted$.value) {\n                const res = setupState(...args)\n                return (res.children === null || typeof res.children === 'string')\n                  ? createElementVNode(res.type, res.props, res.children, res.patchFlag, res.dynamicProps, res.shapeFlag)\n                  : h(res)\n              } else {\n                return h('div', ctx.attrs)\n              }\n            }\n      })\n  }\n\n  cache.set(component, clone)\n\n  return clone\n}\n","<script setup lang=\"ts\">\r\nconst { $emit, MITT_KEY } = useMitt()\r\nconst { headerList, activeIndex } = useHeader()\r\n\r\nconst handleSelect = (key: string) => {\r\n  // currentIndex.value = key\r\n  $emit(MITT_KEY.HEADER_SELECT_EVENT, key)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <header class=\"header bg-[#fff]\">\r\n    <div class=\"row\">\r\n      <nav class=\"relative w-100% block\">\r\n        <client-only>\r\n          <el-menu\r\n            class=\"w-100%\"\r\n            :default-active=\"activeIndex\" mode=\"horizontal\"\r\n            router\r\n            @select=\"handleSelect\"\r\n          >\r\n            <el-menu-item index=\"logo\">\r\n              <a href=\"/\"><img\r\n                class=\"w-80px object-cover\"\r\n                src=\"@/assets/images/logo.png\"\r\n                alt=\"Element logo\"\r\n              ></a>\r\n            </el-menu-item>\r\n            <el-menu-item class=\"flex-1\" />\r\n            <template\r\n              v-for=\"item in headerList\"\r\n              :key=\"item.href\"\r\n            >\r\n              <el-sub-menu v-if=\"item.children?.length\" :index=\"item.href\">\r\n                <template #title>\r\n                  {{ item.title }}\r\n                </template>\r\n                <el-menu-item v-for=\"child in item.children\" :key=\"child.href\" :index=\"child.href\">\r\n                  {{ child.title }}\r\n                </el-menu-item>\r\n              </el-sub-menu>\r\n              <el-menu-item v-else :index=\"item.href\">\r\n                {{ item.title }}\r\n              </el-menu-item>\r\n            </template>\r\n          </el-menu>\r\n        </client-only>\r\n        <div class=\"absolute right--120px top-50% translate-y--50% flex flex-items-center\">\r\n          <el-button type=\"primary\" round>\r\n            <span>注册</span>\r\n            <span class=\"ml-2 mr-2 opacity-20\">|</span>\r\n            <span>登录</span>\r\n          </el-button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.header {\r\n  :deep(.el-menu--horizontal) {\r\n    @apply border-none;\r\n  }\r\n  :deep(.el-menu-item) {\r\n    @apply h-72px;\r\n    &:hover {\r\n      background:none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","export default \"__VITE_ASSET__3da31712__\"","export default \"__VITE_ASSET__31b948e4__\""],"names":["useMitt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAA,qBAAA,gBAAA;AAAA,EACA,MAAA;AAAA,EACA,cAAA;AAAA;AAAA,EAEA,OAAA,CAAA,YAAA,eAAA,kBAAA,aAAA;AAAA,EACA,MAAA,GAAA,EAAA,OAAA,MAAA,GAAA;AAC8B,UAAA,UAAA,IAAA,KAAA;AAE9B,WAAA,CAAA,UAAA;;AACA,UAAA,QAAA,OAAA;AAAA,gBAAA,WAAA,YAAA;AAAA,MAAA;AACA,YAAA,OAAA,MAAA,YAAA,MAAA;AACA,UAAA,MAAA;AAAA,eAAA;MAAA;AACA,YAAA,cAAA,MAAA,YAAA,MAAA,eAAA;AACA,YAAA,cAAA,MAAA,eAAA,MAAA,kBAAA;AACA,aAAA,mBAAA,aAAA,OAAA,WAAA;AAAA,IACA;AAAA,EACA;AACA,CAAA;;;;;;;;;;AClBAA,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA,MAAe,aAAA,KAAA,iBAAA,qBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,qBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}